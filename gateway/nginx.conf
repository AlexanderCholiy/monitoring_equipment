server_tokens off;
# Отключает отображение версии nginx в заголовках и ошибках — повышает безопасность.

# Определяем зону для ограничения количества запросов (rate limiting)
# $binary_remote_addr — бинарное представление IP клиента
# zone=req_limit_per_ip:10m — создаём зону размером 10 мегабайт для хранения состояния лимитов
# rate=5r/s — разрешаем максимум 5 запросов в секунду с одного IP
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

# Определяем зону для ограничения одновременных соединений с одного IP
# zone=addr:10m — зона размером 10 мегабайт для хранения количества соединений
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
  listen 80;
  # Максимальный размер тела запроса (например, для загрузки файлов) — 12 мегабайт
  client_max_body_size 12M;

  location /static/ {
      alias /staticfiles/;
      index index.html;
      access_log off;
      expires 7d;
      add_header Cache-Control "public, max-age=2592000";
      try_files $uri $uri/ =404;
  }

  location /media/ {
      alias /mediafiles/;
      access_log off;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
      try_files $uri $uri/ =404;
  }

  location / {
      # Ограничиваем количество запросов к основному приложению:
      # burst=10 — разрешаем "набрасывать" до 10 запросов сверх установленного rate,
      # delay=2 — замедляем выполнение сверхлимитных запросов, позволяя "растянуть" burst во времени
      limit_req zone=req_limit_per_ip burst=10 delay=2;

      # Ограничиваем количество одновременных соединений с одного IP до 5
      limit_conn addr 5;

      proxy_pass http://ts_core_backend:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
  }
}