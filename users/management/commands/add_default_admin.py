import os

from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model

from users.models import PendingUser
from dotenv import load_dotenv


load_dotenv(override=True)


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
    ADMIN_USERNAME = os.getenv('ADMIN_USERNAME', 'admin')
    ADMIN_EMAIL = os.getenv('ADMIN_EMAIL', 'admin@newtowers.ru')
    ADMIN_PASSWORD = os.getenv('ADMIN_PASSWORD', '3uGMw69J6fflgFsSpA76ebSuk')

    def handle(self, *args, **kwargs):
        User = get_user_model()

        if User.objects.filter(
            username=ADMIN_USERNAME, is_superuser=True
        ).exists():
            print(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "{ADMIN_USERNAME}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
            return

        # –£–¥–∞–ª—è–µ–º PendingUser —Å —Ç–∞–∫–∏–º –∂–µ username –∏–ª–∏ email, –µ—Å–ª–∏ –µ—Å—Ç—å
        deleted, _ = PendingUser.objects.filter(
            username=ADMIN_USERNAME
        ).delete()
        if deleted:
            self.stdout.write(f"üßπ –£–¥–∞–ª—ë–Ω PendingUser —Å username='{ADMIN_USERNAME}'")

        deleted, _ = PendingUser.objects.filter(
            email=ADMIN_EMAIL
        ).delete()
        if deleted:
            self.stdout.write(f"üßπ –£–¥–∞–ª—ë–Ω PendingUser —Å email='{ADMIN_EMAIL}'")

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User.objects.create_user(
            username=ADMIN_USERNAME,
            email=ADMIN_EMAIL,
            password=ADMIN_PASSWORD,
            role='user'  # –∏–ª–∏ 'admin', –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—à—å —Ç–∞–∫—É—é —Ä–æ–ª—å
        )
        user.is_staff = True
        user.is_superuser = True
        user.save()

        self.stdout.write(self.style.SUCCESS(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä '{ADMIN_USERNAME}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω."))
